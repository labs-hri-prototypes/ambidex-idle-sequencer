{"ast":null,"code":"import { data_pr } from './data.js';\n\nfunction prRangeFinder() {\n  let _range_1 = [];\n  let _range_2 = [];\n\n  let _cat;\n\n  let _pr_accum_1 = 0;\n  let _pr_accum_2 = 0;\n  let _data_1 = data_pr.primary;\n  let _data_2 = data_pr.secondary;\n  data_pr.motionGroup.forEach((item, index) => {\n    _cat = item.cat;\n\n    let pr_cat_1 = _data_1.find(o => o.cat === _cat).pr;\n\n    let pr_cat_2 = _data_2.find(o => o.cat === _cat).pr;\n\n    let pr_accum_inCat_1 = 0;\n    let pr_accum_inCat_2 = 0;\n\n    if (index > 0) {\n      _pr_accum_1 += _data_1[index - 1].pr;\n      _pr_accum_2 += _data_2[index - 1].pr;\n    }\n\n    item.motions.forEach((item, index) => {\n      pr_accum_inCat_1 += pr_cat_1 * item.pr;\n      pr_accum_inCat_2 += pr_cat_2 * item.pr;\n      let pr1 = _pr_accum_1 + pr_accum_inCat_1;\n      let pr2 = _pr_accum_2 + pr_accum_inCat_2;\n      let output_1 = {\n        code: item.code,\n        pr: pr1\n      };\n      let output_2 = {\n        code: item.code,\n        pr: pr2\n      };\n\n      _range_1.push(output_1);\n\n      _range_2.push(output_2);\n    });\n  });\n  console.log(_range_1);\n  console.log(_range_2);\n}\n\nexport default prRangeFinder();","map":{"version":3,"sources":["/Users/zomme/Github/labs-hri-prototypes/ambidex-idle-sequencer/src/prRangeFinder.js"],"names":["data_pr","prRangeFinder","_range_1","_range_2","_cat","_pr_accum_1","_pr_accum_2","_data_1","primary","_data_2","secondary","motionGroup","forEach","item","index","cat","pr_cat_1","find","o","pr","pr_cat_2","pr_accum_inCat_1","pr_accum_inCat_2","motions","pr1","pr2","output_1","code","output_2","push","console","log"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,WAAtB;;AAEA,SAASC,aAAT,GAAyB;AACvB,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAIC,IAAJ;;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,OAAO,GAAGP,OAAO,CAACQ,OAAtB;AACA,MAAIC,OAAO,GAAGT,OAAO,CAACU,SAAtB;AAEAV,EAAAA,OAAO,CAACW,WAAR,CAAoBC,OAApB,CAA4B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3CV,IAAAA,IAAI,GAAGS,IAAI,CAACE,GAAZ;;AACA,QAAIC,QAAQ,GAAGT,OAAO,CAACU,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACH,GAAF,KAAUX,IAA5B,EAAkCe,EAAjD;;AACA,QAAIC,QAAQ,GAAGX,OAAO,CAACQ,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACH,GAAF,KAAUX,IAA5B,EAAkCe,EAAjD;;AACA,QAAIE,gBAAgB,GAAG,CAAvB;AACA,QAAIC,gBAAgB,GAAG,CAAvB;;AACA,QAAGR,KAAK,GAAG,CAAX,EAAc;AACZT,MAAAA,WAAW,IAAIE,OAAO,CAACO,KAAK,GAAC,CAAP,CAAP,CAAiBK,EAAhC;AACAb,MAAAA,WAAW,IAAIG,OAAO,CAACK,KAAK,GAAC,CAAP,CAAP,CAAiBK,EAAhC;AACD;;AACDN,IAAAA,IAAI,CAACU,OAAL,CAAaX,OAAb,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpCO,MAAAA,gBAAgB,IAAIL,QAAQ,GAAGH,IAAI,CAACM,EAApC;AACAG,MAAAA,gBAAgB,IAAIF,QAAQ,GAAGP,IAAI,CAACM,EAApC;AACA,UAAIK,GAAG,GAAGnB,WAAW,GAAGgB,gBAAxB;AACA,UAAII,GAAG,GAAGnB,WAAW,GAAGgB,gBAAxB;AACA,UAAII,QAAQ,GAAG;AACbC,QAAAA,IAAI,EAAEd,IAAI,CAACc,IADE;AAEbR,QAAAA,EAAE,EAAEK;AAFS,OAAf;AAIA,UAAII,QAAQ,GAAG;AACbD,QAAAA,IAAI,EAAEd,IAAI,CAACc,IADE;AAEbR,QAAAA,EAAE,EAAEM;AAFS,OAAf;;AAIAvB,MAAAA,QAAQ,CAAC2B,IAAT,CAAcH,QAAd;;AACAvB,MAAAA,QAAQ,CAAC0B,IAAT,CAAcD,QAAd;AACD,KAfD;AAgBD,GA1BD;AA2BAE,EAAAA,OAAO,CAACC,GAAR,CAAY7B,QAAZ;AACA4B,EAAAA,OAAO,CAACC,GAAR,CAAY5B,QAAZ;AACD;;AAED,eAAeF,aAAa,EAA5B","sourcesContent":["import {data_pr} from './data.js';\n\nfunction prRangeFinder() {\n  let _range_1 = [];\n  let _range_2 = [];\n  let _cat;\n  let _pr_accum_1 = 0;\n  let _pr_accum_2 = 0;\n  let _data_1 = data_pr.primary;\n  let _data_2 = data_pr.secondary;\n\n  data_pr.motionGroup.forEach((item, index) => {\n    _cat = item.cat;\n    let pr_cat_1 = _data_1.find(o => o.cat === _cat).pr;\n    let pr_cat_2 = _data_2.find(o => o.cat === _cat).pr;\n    let pr_accum_inCat_1 = 0;\n    let pr_accum_inCat_2 = 0;\n    if(index > 0) {\n      _pr_accum_1 += _data_1[index-1].pr;\n      _pr_accum_2 += _data_2[index-1].pr;\n    }\n    item.motions.forEach((item, index) => {\n      pr_accum_inCat_1 += pr_cat_1 * item.pr;\n      pr_accum_inCat_2 += pr_cat_2 * item.pr;\n      let pr1 = _pr_accum_1 + pr_accum_inCat_1;\n      let pr2 = _pr_accum_2 + pr_accum_inCat_2;\n      let output_1 = {\n        code: item.code,\n        pr: pr1\n      };\n      let output_2 = {\n        code: item.code,\n        pr: pr2\n      };\n      _range_1.push(output_1);\n      _range_2.push(output_2);\n    });\n  });\n  console.log(_range_1);\n  console.log(_range_2);\n}\n\nexport default prRangeFinder();\n"]},"metadata":{},"sourceType":"module"}